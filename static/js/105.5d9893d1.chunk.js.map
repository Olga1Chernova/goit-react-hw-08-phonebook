{"version":3,"file":"static/js/105.5d9893d1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/ContactForm/ContactForm.module.scss?8c81","modules/Contacts/ContactForm/initialState.js","modules/Contacts/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/ContactList/ContactList.module.scss?d244","modules/Contacts/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/Filter/Filter.module.scss?706b","modules/Contacts/Filter/Filter.jsx","redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/common.module.scss?b9e3","modules/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"ContactForm_form__wrapper__RmKG5\",\"form__label\":\"ContactForm_form__label__6QKQr\",\"form__input\":\"ContactForm_form__input__CXWs6\",\"form__button\":\"ContactForm_form__button__e7u5q\"};","const initialState = {\n    name: \"\",\n    number: \"\",\n}\n\nexport default initialState;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.scss';\nimport initialState from './initialState';\n\nconst ContactForm = ({onSubmit}) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({target}) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setState({...initialState});\n  }\n\n  const { name, number } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <div className={styles.form__wrapper}>\n        <label className={styles.form__label}>Name</label>\n        <input\n          className={styles.form__input}\n          value={name}\n          placeholder=\"Contact name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n        <label className={styles.form__label}>Number</label>\n        <input\n          value={number}\n          className={styles.form__input}\n          placeholder=\"Contact number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n        <button className={styles.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"ContactList_contacts__item__MJw9L\",\"contacts__button\":\"ContactList_contacts__button__F7MrP\"};","import PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.scss';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  const contactInfo = contacts.map(({ id, name, number }) => {\n    return (\n      <li key={id} className={styles.contacts__item}>\n        {name}: {number}\n        <button\n          onClick={() => deleteContact(id)}\n          className={styles.contacts__button}\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n\n  return <ul className={styles.contacts}>{contactInfo}</ul>;\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  items: [],\n};\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n })) \n}","// extracted by mini-css-extract-plugin\nexport default {\"contacts__wrapper\":\"Filter_contacts__wrapper__Yb6JE\",\"contacts__label\":\"Filter_contacts__label__fNElg\",\"contacts__input\":\"Filter_contacts__input__R0jI1\"};","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ handleChange, value }) => {\n  return (\n    <div className={styles.contacts__wrapper}>\n      <label className={styles.contacts__label}>Find contacts by name</label>\n      <input\n        value={value}\n        className={styles.contacts__input}\n        placeholder=\"Type to find a contact...\"\n        name=\"filter\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n}","export const getFilter = ({ filter }) => filter;","export const getAllContacts = ({contacts}) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n    if (!filter) {\n      return contacts.items;\n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n    });\n    return result;\n}","// extracted by mini-css-extract-plugin\nexport default {\"mainWrapper\":\"common_mainWrapper__KCgmD\",\"title\":\"common_title__20rtc\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from 'redux/contacts/contacts-operations';\n\nimport styles from './common.module.scss';\n\nconst Contacts = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = ({ name, number }) => {\n    const action = fetchAddContact({ name, number });\n    dispatch(action);\n  };\n\n  const onDeleteContact = id => {\n    const action = fetchDeleteContact(id);\n    dispatch(action);\n  };\n\n  const handleFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  return (\n    <div className={styles.mainWrapper}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm onSubmit={onAddContact} />\n      <h2 className={styles.title}>Contacts</h2>\n      <Filter value={filter} handleChange={handleFilter} />\n      <ContactList\n        contacts={filteredContacts}\n        deleteContact={onDeleteContact}\n      />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from \"modules/Contacts/Contacts\";\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <Contacts />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["name","number","onSubmit","useState","initialState","state","setState","handleChange","target","value","prevState","className","styles","e","preventDefault","placeholder","type","pattern","title","required","onChange","ContactList","contacts","deleteContact","contactInfo","map","id","onClick","defaultProps","items","getFilter","filter","getFilteredContacts","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","filteredContacts","useSelector","dispatch","useDispatch","useEffect","fetchAllContacts","action","fetchAddContact","setFilter","fetchDeleteContact"],"sourceRoot":""}